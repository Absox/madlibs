Websocket Spec

Path:
/madlibs/api/websocket

Game Messages:

    JOIN | USER
        {
            "type" : "gameJoin",
            "id" : <sessionID>,
            "user" : <userIdentifier> // Null if anonymous
        }
    JOIN RESPONSE SUCCESS | SERVER
        {
            "type" : "gameJoinResponse",
            "status" : "success",
            "id" : <sessionID>,
            "user" : <userIdentifier>
        }
    JOIN RESPONSE FAILURE | SERVER
        {
            "type" : "gameJoinResponse",
            "status" : "failure",
            "id" : <sessionID>,
            "why" : "<reason>" // Already in a game
        }

    GAME STATE UPDATE | SERVER
        {
            "type" : "gameStateUpdate",
            "id" : <sessionID>,
            "users" : [usernames],
            "currentPrompt" : <currentPrompt>,
            "currentTurn" : <currentTurn> // Identifier of user whose turn it is
        }
    SESSION COMPLETE | SERVER
        {
            "type" : "sessionComplete",
            "id" : <sessionID>,
            "template" : <templateBody>,
            "responses" : <responses>
        }

    USER JOINED UPDATE | SERVER
        {
            "type" : "userJoinedUpdate",
            "id" : <sessionID>,
            "user" : <identifier>
        }

    USER LEFT UPDATE | SERVER
        {
            "type" : "userLeftUpdate",
            "id" : <sessionID>,
            "user" : <identifier>
        }

    GAME END MESSAGE | SERVER
        {
            "type" : "gameEnd",
            "id" : <sessionID>,
            "users" : [usernames],
            "template" : <template>,
            "responses" : [response]

            /*
            response = {
                "user" : <user>
                "value" : <value>,
            }
            */
        }

    RESPONSE SUBMISSION | USER
        {
            "type" : "responseSubmit",
            "id" : <sessionID>,
            "user" : <userIdentifier>
            "value" : <value>
        }

    RESPONSE FAILURE MESSAGE | SERVER
        {
            "type" : "responseSubmitFailure",
            "why" : "reason"
        }

Chat Messages:

    SEND CHAT MESSAGE | USER
        {
            "type" : "chatSend",
            "message" : <message>
        }

    CHAT MESSAGE RECEIVED | SERVER
        {
            "type" : "chatReceive",
            "id" : <sessionID>,
            "user" : <userIdentifier>,
            "message" : <message>,
            "time" : <time>
        }